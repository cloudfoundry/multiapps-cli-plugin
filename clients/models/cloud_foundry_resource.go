// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CloudFoundryResource cloud foundry resource
// swagger:model CloudFoundryResource

type CloudFoundryResource struct {

	// guid
	GUID string `json:"guid,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// internal
	Internal bool `json:"internal,omitempty"`

	// relationships
	Relationships *CloudFoundryResourceRelationships `json:"relationships,omitempty"`

	// metadata
	Metadata *CloudFoundryResourceMetadata `json:"metadata,omitempty"`
}

/* polymorph CloudFoundryResource relationships false */

/* polymorph CloudFoundryResource metadata false */

// Validate validates this cloud foundry resource
func (m *CloudFoundryResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRelationships(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CloudFoundryResource) validateRelationships(formats strfmt.Registry) error {

	if swag.IsZero(m.Relationships) { // not required
		return nil
	}

	if m.Relationships != nil {

		if err := m.Relationships.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("entity")
			}
			return err
		}
	}

	return nil
}

func (m *CloudFoundryResource) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {

		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CloudFoundryResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloudFoundryResource) UnmarshalBinary(b []byte) error {
	var res CloudFoundryResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
